hist( t1$H,col = "Sky Blue", xlab = "H", main = "Histogram of H")
hist( t1$N,col = "Sky Blue", xlab = "N", main = "Histogram of N")
hist( t1$B,col = "Sky Blue", xlab = "B", main = "Histogram of B")
par(mfrow = c(0,4), mar=c(4, 4, 2,1))
hist( t1$L,col = "Sky Blue", xlab = "L", main = "Histogram of L")
hist( t1$H,col = "Sky Blue", xlab = "H", main = "Histogram of H")
hist( t1$N,col = "Sky Blue", xlab = "N", main = "Histogram of N")
hist( t1$B,col = "Sky Blue", xlab = "B", main = "Histogram of B")
par(mfrow = c(4,0), mar=c(4, 4, 2,1))
hist( t1$L,col = "Sky Blue", xlab = "L", main = "Histogram of L")
hist( t1$H,col = "Sky Blue", xlab = "H", main = "Histogram of H")
hist( t1$N,col = "Sky Blue", xlab = "N", main = "Histogram of N")
hist( t1$B,col = "Sky Blue", xlab = "B", main = "Histogram of B")
par(mfrow = c(4,1), mar=c(4, 4, 2,1))
hist( t1$L,col = "Sky Blue", xlab = "L", main = "Histogram of L")
hist( t1$H,col = "Sky Blue", xlab = "H", main = "Histogram of H")
hist( t1$N,col = "Sky Blue", xlab = "N", main = "Histogram of N")
hist( t1$B,col = "Sky Blue", xlab = "B", main = "Histogram of B")
par(mfrow = c(4,4), mar=c(4, 4, 2,1))
hist( t1$L,col = "Sky Blue", xlab = "L", main = "Histogram of L")
hist( t1$H,col = "Sky Blue", xlab = "H", main = "Histogram of H")
hist( t1$N,col = "Sky Blue", xlab = "N", main = "Histogram of N")
hist( t1$B,col = "Sky Blue", xlab = "B", main = "Histogram of B")
t4 <- read.csv("Data Set 3.csv",na.strings="")
mysubsetL <- t4$L
mysubsetH <- t4$H
mysubsetN <- t4$N
mysubsetB <- t4$B
par(mfrow = c(1,4), mar = c(4,4,2,1))
boxplot(mysubsetL, ylim = c(40,150), main = "L")
boxplot(mysubsetH, ylim = c(40,150), main = "H")
boxplot(mysubsetN, ylim = c(40,150), main = "N")
boxplot(mysubsetB, ylim = c(40,150), main = "B")
# 3.1 Scatter Plot for petal length and width
t1 <- read.csv("Data Set 4.csv")
plot(t1$Petal.Length, t1$Petal.Width, xlab="Petal length", ylab="Petal width")
# 3.1 Scatter Plot for petal length and width
t1 <- read.csv("Data Set 4.csv")
plot(t1$Petal.Length, t1$Petal.Width, xlab="Petal length", ylab="Petal width")
# 3.1 Scatter Plot for petal length and width
t1 <- read.csv("Data Set 4.csv")
plot(t1$Petal.Length, t1$Petal.Width, xlab="Petal length", ylab="Petal width")
install.packages("lubridate")
library(lubridate)
t1 <- read.csv("Data set 1a.csv", na.strings = "")
t2<- read.csv("Data set 1b.csv", na.strings = "")
#cleaning the data
levels(t1$Product) <- c(levels(t1$Product), "Galaxy Edge S8")
t1$Product[t1$Product == "Galaxi Edge S8"]<-"Galaxy Edge S8"
levels(t1$Name) <- c(levels(t1$Name), "Alice")
t1$Name[t1$Name == "ALice"]<-"Alice"
install.packages("lubridate")
library(lubridate)
t1 <- read.csv("Data set 1a.csv", na.strings = "")
t2<- read.csv("Data set 1b.csv", na.strings = "")
#cleaning the data
levels(t1$Product) <- c(levels(t1$Product), "Galaxy Edge S8")
t1$Product[t1$Product == "Galaxi Edge S8"]<-"Galaxy Edge S8"
levels(t1$Name) <- c(levels(t1$Name), "Alice")
t1$Name[t1$Name == "ALice"]<-"Alice"
#setting the colum name in the table
names(t1) = c("No","Date","Consumer","Product","Quantity")
#change in date formate
t1$Date<-dmy(t1$Date)
t1$Quantity[t1$Quantity == "one"] <- "1"
t1$Quantity[t1$Quantity == "two"] <- "2"
t1 <-na.omit(t1)
#reading  the second tables
t3<-merge(t1,t2,"Product")
install.packages("lubridate")
t3
#reading  the second tables
t3<-merge(t1,t2,"Product")
#change  to set currency rate
Calculate.Rate <-function(arg1){
if (arg1=='NZD')
{
out<-1
}
if(arg1=='AUD')
{
out<-1.2
}
return(out)
}
t3["Exchange.Rate"] <-sapply(t3$Currency,Calculate.Rate)
t3$Unit.Price.NZD <-t3$Unit.Price*t3$Exchange.Rate
#transation made after 1-1-2010
ans1<-subset(t3,t3$Date>dmy(01012010))
ans1
#calculating total sales
ans1$Quantity <-as.numeric(ans1$Quantity)
ans1$amountnzd <- ans1$Quantity*ans1$Unit.Price.NZD
#calculating on monthly basis
ans1$Month <- months(ans1$Date)
ans1$Year <- format(ans1$Date,format="%y")
toplot <- aggregate(amountnzd ~Month +Year, ans1, sum)
print(toplot)
#charts and plots
barplot(toplot$amountnzd, names.arg = c(toplot$Month), xlab="Month", ylab="NZD", main = "Monthly Sales")
#charts and plots
barplot(toplot$amountnzd, names.arg = c(toplot$Month), xlab="Month", ylab="NZD", main = "Monthly Sales")
install.packages("lubridate")
install.packages("lubridate")
asn1
ans1
barplot(toplot$amountnzd, names.arg = c(toplot$Month), xlab="Month", ylab="NZD", main = "Monthly Sales")
t1<- read.csv("Data Set 3.csv")
par(mfrow = c(2,2), mar=c(4, 4, 2,1))
hist( t1$L,col = "Sky Blue", xlab = "L", main = "Histogram of L")
hist( t1$H,col = "Sky Blue", xlab = "H", main = "Histogram of H")
hist( t1$N,col = "Sky Blue", xlab = "N", main = "Histogram of N")
hist( t1$B,col = "Sky Blue", xlab = "B", main = "Histogram of B")
par(mfrow = c(4,1), mar=c(4, 4, 2,1))
hist( t1$L,col = "Sky Blue", xlab = "L", main = "Histogram of L")
hist( t1$H,col = "Sky Blue", xlab = "H", main = "Histogram of H")
hist( t1$N,col = "Sky Blue", xlab = "N", main = "Histogram of N")
hist( t1$B,col = "Sky Blue", xlab = "B", main = "Histogram of B")
t2<- read.csv("Data Set 3.csv")
par(mfrow = c(2,2), mar=c(4, 4, 2,1))
plot(density(t2$L), xlab = "N= 150 Bandwidth= 1.726" , main= "Density function of L")
plot(density(t2$H), xlab = "N= 150 Bandwidth= 1.632" , main= "Density function of H")
plot(density(t2$N), xlab = "N= 150 Bandwidth= 0.9862" , main= "Density function of N")
plot(density(t2$B), xlab = "N= 150 Bandwidth= 1.479" , main= "Density function of B")
par(mfrow = c(1,4), mar = c(4,4,2,1))
boxplot(mysubsetL, ylim = c(40,150), main = "L")
boxplot(mysubsetH, ylim = c(40,150), main = "H")
boxplot(mysubsetN, ylim = c(40,150), main = "N")
boxplot(mysubsetB, ylim = c(40,150), main = "B")
#Creating Boxplot
t4 <- read.csv("Data Set 3.csv",na.strings="")
mysubsetL <- t4$L
mysubsetH <- t4$H
mysubsetN <- t4$N
mysubsetB <- t4$B
par(mfrow = c(1,4), mar = c(4,4,2,1))
boxplot(mysubsetL, ylim = c(40,150), main = "L")
boxplot(mysubsetH, ylim = c(40,150), main = "H")
boxplot(mysubsetN, ylim = c(40,150), main = "N")
boxplot(mysubsetB, ylim = c(40,150), main = "B")
install.packages("lubridate")
library(lubridate)
t1 <- read.csv("Data set 1a.csv", na.strings = "")
t2<- read.csv("Data set 1b.csv", na.strings = "")
#cleaning the data
levels(t1$Product) <- c(levels(t1$Product), "Galaxy Edge S8")
t1$Product[t1$Product == "Galaxi Edge S8"]<-"Galaxy Edge S8"
levels(t1$Name) <- c(levels(t1$Name), "Alice")
t1$Name[t1$Name == "ALice"]<-"Alice"
#setting the colum name in the table
names(t1) = c("No","Date","Consumer","Product","Quantity")
#change in date formate
t1$Date<-dmy(t1$Date)
t1$Quantity[t1$Quantity == "one"] <- "1"
t1$Quantity[t1$Quantity == "two"] <- "2"
t1 <-na.omit(t1)
install.packages("lubridate")
install.packages("lubridate")
library(lubridate)
t1 <- read.csv("Data set 1a.csv", na.strings = "")
t2<- read.csv("Data set 1b.csv", na.strings = "")
#cleaning the data
levels(t1$Product) <- c(levels(t1$Product), "Galaxy Edge S8")
t1$Product[t1$Product == "Galaxi Edge S8"]<-"Galaxy Edge S8"
levels(t1$Name) <- c(levels(t1$Name), "Alice")
t1$Name[t1$Name == "ALice"]<-"Alice"
#setting the colum name in the table
names(t1) = c("No","Date","Consumer","Product","Quantity")
#change in date formate
t1$Date<-dmy(t1$Date)
t1$Quantity[t1$Quantity == "one"] <- "1"
t1$Quantity[t1$Quantity == "two"] <- "2"
t1 <-na.omit(t1)
install.packages("lubridate")
t1
#reading  the second tables
t3<-merge(t1,t2,"Product")
#change  to set currency rate
Calculate.Rate <-function(arg1){
if (arg1=='NZD')
{
out<-1
}
if(arg1=='AUD')
{
out<-1.2
}
return(out)
}
t3["Exchange.Rate"] <-sapply(t3$Currency,Calculate.Rate)
t3$Unit.Price.NZD <-t3$Unit.Price*t3$Exchange.Rate
#transation made after 1-1-2010
ans1<-subset(t3,t3$Date>dmy(01012010))
#calculating total sales
ans1$Quantity <-as.numeric(ans1$Quantity)
ans1$amountnzd <- ans1$Quantity*ans1$Unit.Price.NZD
ans1
install.packages("lubridate")
library(lubridate)
t1 <- read.csv("Data set 1a.csv", na.strings = "")
t2<- read.csv("Data set 1b.csv", na.strings = "")
#cleaning the data
levels(t1$Product) <- c(levels(t1$Product), "Galaxy Edge S8")
t1$Product[t1$Product == "Galaxi Edge S8"]<-"Galaxy Edge S8"
levels(t1$Name) <- c(levels(t1$Name), "Alice")
t1$Name[t1$Name == "ALice"]<-"Alice"
#setting the colum name in the table
names(t1) = c("No","Date","Consumer","Product","Quantity")
#change in date formate
t1$Date<-dmy(t1$Date)
t1$Quantity[t1$Quantity == "one"] <- "1"
t1$Quantity[t1$Quantity == "two"] <- "2"
t1 <-na.omit(t1)
#reading  the second tables
t3<-merge(t1,t2,"Product")
#change  to set currency rate
Calculate.Rate <-function(arg1){
if (arg1=='NZD')
{
out<-1
}
if(arg1=='AUD')
{
out<-1.2
}
return(out)
}
t3["Exchange.Rate"] <-sapply(t3$Currency,Calculate.Rate)
t3$Unit.Price.NZD <-t3$Unit.Price*t3$Exchange.Rate
#transation made after 1-1-2010
ans1<-subset(t3,t3$Date>dmy(01012010))
#calculating total sales
ans1$Quantity <-as.numeric(ans1$Quantity)
ans1$amountnzd <- ans1$Quantity*ans1$Unit.Price.NZD
ans1
#calculating total sales
ans1$Quantity <-as.numeric(ans1$Quantity)
ans1$amountnzd <- ans1$Quantity*ans1$Unit.Price.NZD
#calculating on monthly basis
ans1$Month <- months(ans1$Date)
ans1$Year <- format(ans1$Date,format="%y")
toplot <- aggregate(amountnzd ~Month +Year, ans1, sum)
print(toplot)
#charts and plots
barplot(toplot$amountnzd, names.arg = c(toplot$Month), xlab="Month", ylab="NZD", main = "Monthly Sales")
t1<- read.csv("Data Set 3.csv")
par(mfrow = c(2,2), mar=c(4, 4, 2,1))
hist( t1$L,col = "Sky Blue", xlab = "L", main = "Histogram of L")
hist( t1$H,col = "Sky Blue", xlab = "H", main = "Histogram of H")
hist( t1$N,col = "Sky Blue", xlab = "N", main = "Histogram of N")
hist( t1$B,col = "Sky Blue", xlab = "B", main = "Histogram of B")
t2<- read.csv("Data Set 3.csv")
par(mfrow = c(2,2), mar=c(4, 4, 2,1))
plot(density(t2$L), xlab = "N= 150 Bandwidth= 1.726" , main= "Density function of L")
plot(density(t2$H), xlab = "N= 150 Bandwidth= 1.632" , main= "Density function of H")
plot(density(t2$N), xlab = "N= 150 Bandwidth= 0.9862" , main= "Density function of N")
plot(density(t2$B), xlab = "N= 150 Bandwidth= 1.479" , main= "Density function of B")
mysubsetL <- t3$L
mysubsetH <- t3$H
mysubsetN <- t3$N
mysubsetB <- t3$B
skewness(mysubsetL)
kurtosis(mysubsetL)
skewness(mysubsetH)
kurtosis(mysubsetH)
skewness(mysubsetN)
kurtosis(mysubsetN)
skewness(mysubsetB)
kurtosis(mysubsetB)
install.packages("moments")
library(moments)
t3 <- read.csv("Data Set 3.csv",na.strings="")
mysubsetL <- density(t3$L)
mysubsetH <- density(t3$H)
mysubsetN <- density(t3$N)
mysubsetB <- density(t3$B)
par(mfrow = c(2,2), mar = c(4,4,2,1))
plot(mysubsetL, main="Density Function of L")
plot(mysubsetH, main="Density Function of H")
plot(mysubsetN, main="Density Function of N")
plot(mysubsetB, main="Density Function of B")
mysubsetL <- t3$L
mysubsetH <- t3$H
mysubsetN <- t3$N
mysubsetB <- t3$B
skewness(mysubsetL)
kurtosis(mysubsetL)
skewness(mysubsetH)
kurtosis(mysubsetH)
skewness(mysubsetN)
kurtosis(mysubsetN)
skewness(mysubsetB)
kurtosis(mysubsetB)
#Creating Boxplot
t4 <- read.csv("Data Set 3.csv",na.strings="")
mysubsetL <- t4$L
mysubsetH <- t4$H
mysubsetN <- t4$N
mysubsetB <- t4$B
par(mfrow = c(1,4), mar = c(4,4,2,1))
boxplot(mysubsetL, ylim = c(40,150), main = "L")
boxplot(mysubsetH, ylim = c(40,150), main = "H")
boxplot(mysubsetN, ylim = c(40,150), main = "N")
boxplot(mysubsetB, ylim = c(40,150), main = "B")
# Calculate the mean, variance and standard deviation of L, H, N and B
mean(mysubsetL)
mean(mysubsetH)
mean(mysubsetN)
mean(mysubsetB)
var(mysubsetL)
var(mysubsetH)
var(mysubsetN)
var(mysubsetB)
sd(mysubsetL)
sd(mysubsetH)
sd(mysubsetN)
sd(mysubsetB)
mean(t4$L)
mean(t4$H)
mean(t4$N)
mean(t4$B)
var(t4$L)
var(t4$H)
var(t4$N)
var(t4$B)
sd(t4$L)
sd(t4$H)
sd(t4$N)
sd(t4$B)
# 3.1 Scatter Plot for petal length and width
t1 <- read.csv("Data Set 4.csv")
plot(t1$Petal.Length, t1$Petal.Width, xlab="Petal length", ylab="Petal width")
#3.2 Linear calculation
mm<-lm(Petal.Width ~ Petal.Length, data=t1)
lines(t1$Petal.Length,mm$fitted.values)
# 3.3 & 3.4 species 1 setosa
setosa <-  subset(t1, Species == "setosa")
plot(setosa$Petal.Length, setosa$Petal.Width,  xlab="Petal length", ylab="Petal width")
# 3.3 & 3.4 species 1 setosa
setosa <-  subset(t1, Species == "setosa")
plot(setosa$Petal.Length, setosa$Petal.Width,  xlab="Petal length", ylab="Petal width")
##creating a black abline for setosa
model1<-lm(Petal.Width ~ Petal.Length, data=setosa)
lines(setosa$Petal.Length,model1$fitted.values, col= "black")
# 3.3  & 3.4 versicolor Scatter plot
versicolor <-  subset(t1, Species == "versicolor")
plot(versicolor$Petal.Length, versicolor$Petal.Width,  xlab="Petal length", ylab="Petal width")
model2<-lm(Petal.Width ~ Petal.Length, data=versicolor)
lines(versicolor$Petal.Length,model2$fitted.values,col= "blue")
# 3.3 & 3.4 virginica scatter plot
virginica <-  subset(t1, Species == "virginica")
plot(virginica$Petal.Length, virginica$Petal.Width,  xlab="Petal length", ylab="Petal width")
model3<-lm(Petal.Width ~ Petal.Length, data=virginica)
lines(virginica$Petal.Length,model3$fitted.values, col= "green")
plot(t1$Petal.Length, t1$Petal.Width,  col=c("black","blue","green")[unclass(t1$Species)],xlab="Petal length", ylab="Petal width")
model<-lm(Petal.Width ~ Petal.Length, data=t1)
lines(t1$Petal.Length,model$fitted.values, col= "red")
model1<-lm(Petal.Width ~ Petal.Length, data=setosa)
lines(setosa$Petal.Length,model1$fitted.values, col= "black")
model2<-lm(Petal.Width ~ Petal.Length, data=versicolor)
lines(versicolor$Petal.Length,model2$fitted.values, col= "blue")
model3<-lm(Petal.Width ~ Petal.Length, data=virginica)
lines(virginica$Petal.Length,model3$fitted.values, col= "green")
#3.6
x<-t1$Petal.Length
y<-t1$Petal.Width
mm<-lm(y ~ x)
error<-model$fitted.values-y
MSE<-mean(error^2)
MSE
error_1<-model1$fitted.value-t1$Petal.Width
MSE_1<-mean(error_1^2)
MSE_1
error_2<-model2$fitted.value-t1$Petal.Width
MSE_2<-mean(error_2^2)
MSE_2
error_3<-model3$fitted.value-t1$Petal.Width
MSE_3<-mean(error_3^2)
MSE_3
plot(t1_Sepal$Sepal.Length, t1_Sepal$Sepal.Width,  col=c("black","blue","green")[unclass(t1_Sepal$Species)],xlab="Sepal length", ylab="Sepal width")
model<-lm(Sepal.Width ~ Sepal.Length, data=t1_Sepal)
lines(t1_Sepal$Sepal.Length,model$fitted.values, col= "red")
model1<-lm(Sepal.Width ~ Sepal.Length, data=setosa)
lines(setosa$Sepal.Length,model1$fitted.values, col= "black")
model2<-lm(Sepal.Width ~ Sepal.Length, data=versicolor)
lines(versicolor$Sepal.Length,model2$fitted.values, col= "blue")
model3<-lm(Sepal.Width ~ Sepal.Length, data=virginica)
lines(virginica$Sepal.Length,model3$fitted.values, col= "green")
plot(t1_Sepal$Sepal.Length, t1_Sepal$Sepal.Width,  col=c("black","blue","green")[unclass(t1_Sepal$Species)],xlab="Sepal length", ylab="Sepal width")
model<-lm(Sepal.Width ~ Sepal.Length, data=t1_Sepal)
lines(t1_Sepal$Sepal.Length,model$fitted.values, col= "red")
model1<-lm(Sepal.Width ~ Sepal.Length, data=setosa)
lines(setosa$Sepal.Length,model1$fitted.values, col= "black")
model2<-lm(Sepal.Width ~ Sepal.Length, data=versicolor)
lines(versicolor$Sepal.Length,model2$fitted.values, col= "blue")
model3<-lm(Sepal.Width ~ Sepal.Length, data=virginica)
lines(virginica$Sepal.Length,model3$fitted.values, col= "green")
plot(t1_Sepal$Sepal.Length, t1_Sepal$Sepal.Width,  col=c("black","blue","green")[unclass(t1_Sepal$Species)],xlab="Sepal length", ylab="Sepal width")
model<-lm(Sepal.Width ~ Sepal.Length, data=t1_Sepal)
lines(t1_Sepal$Sepal.Length,model$fitted.values, col= "red")
model1<-lm(Sepal.Width ~ Sepal.Length, data=setosa)
lines(setosa$Sepal.Length,model1$fitted.values, col= "black")
model2<-lm(Sepal.Width ~ Sepal.Length, data=versicolor)
lines(versicolor$Sepal.Length,model2$fitted.values, col= "blue")
model3<-lm(Sepal.Width ~ Sepal.Length, data=virginica)
lines(virginica$Sepal.Length,model3$fitted.values, col= "green")
# 3.1 Scatter Plot for Sepal length and width
t1_Sepal<- read.csv("Data Set 4.csv")
plot(t1_Sepal$Sepal.Length, t1_Sepal$Sepal.Width, xlab="Sepal length", ylab="Sepal width")
#3.2 Linear calculation
mm<-lm(Sepal.Width ~ Sepal.Length, data=t1_Sepal)
lines(t1_Sepal$Sepal.Length,mm$fitted.values)
# 3.3 subdivede each species  individul (another way of doing )
# t1_se = subset(t1_Sepal,t1_Sepal$Species =='setosa')
# t2_ve = subset(t1_Sepal,t1_Sepal$Species =='versicolor')
# t3_vi = subset(t1_Sepal,t1_Sepal$Species =='virginica')
# 3.3 & 3.4 species 1 setosa
setosa <-  subset(t1_Sepal, Species == "setosa")
plot(setosa$Sepal.Length, setosa$Sepal.Width,  xlab="Sepal length", ylab="Sepal width")
##creating a black abline for setosa
model1<-lm(Sepal.Width ~ Sepal.Length, data=setosa)
lines(setosa$Sepal.Length,model1$fitted.values, col= "black")
# 3.3  & 3.4 versicolor Scatter plot
versicolor <-  subset(t1_Sepal, Species == "versicolor")
plot(versicolor$Sepal.Length, versicolor$Sepal.Width,  xlab="Sepal length", ylab="Sepal width")
model2<-lm(Sepal.Width ~ Sepal.Length, data=versicolor)
lines(versicolor$Sepal.Length,model2$fitted.values,col= "blue")
# 3.3 & 3.4 virginica scatter plot
virginica <-  subset(t1_Sepal, Species == "virginica")
plot(virginica$Sepal.Length, virginica$Sepal.Width,  xlab="Sepal length", ylab="Sepal width")
model3<-lm(Sepal.Width ~ Sepal.Length, data=virginica)
lines(virginica$Sepal.Length,model3$fitted.values, col= "green")
#3.5
plot(t1_Sepal$Sepal.Length, t1_Sepal$Sepal.Width,  col=c("black","blue","green")[unclass(t1_Sepal$Species)],xlab="Sepal length", ylab="Sepal width")
model<-lm(Sepal.Width ~ Sepal.Length, data=t1_Sepal)
lines(t1_Sepal$Sepal.Length,model$fitted.values, col= "red")
model1<-lm(Sepal.Width ~ Sepal.Length, data=setosa)
lines(setosa$Sepal.Length,model1$fitted.values, col= "black")
model2<-lm(Sepal.Width ~ Sepal.Length, data=versicolor)
lines(versicolor$Sepal.Length,model2$fitted.values, col= "blue")
model3<-lm(Sepal.Width ~ Sepal.Length, data=virginica)
lines(virginica$Sepal.Length,model3$fitted.values, col= "green")
# 4.1.Create a scatter plot for petal length and width variables.
t1<- read.csv("Data Set 5.csv")
# plot(t1$Size, t1$KW, xlab="Size", ylab="KW")
# 4.2 Calculate a linear regression model.
plot(t1$Size, t1$KW, xlab="Size", ylab="KW")
mm1<-lm(t1$KW~t1$Size)
lines(t1$Size,mm1$fitted.values,col="black")
plot(t1$Size, t1$KW, xlab="Size", ylab="KW")
mm1<-lm(t1$KW~poly(t1$Size))
# 4.1.Create a scatter plot for petal length and width variables.
t1<- read.csv("Data Set 5.csv")
# plot(t1$Size, t1$KW, xlab="Size", ylab="KW")
# 4.2 Calculate a linear regression model.
plot(t1$Size, t1$KW, xlab="Size", ylab="KW")
mm1<-lm(t1$KW~t1$Size)
lines(t1$Size,mm1$fitted.values,col="black")
plot(t1$Size, t1$KW, xlab="Size", ylab="KW")
mm1<-lm(t1$KW~poly(t1$Size))
lines(t1$Size,mm1$fitted.values,col="black")
#4.3 Calculate polynomial regression models of order 2 and 3
plot(t1$Size, t1$KW, xlab="Size", ylab="KW")
mm1<-lm(t1$KW~poly(t1$Size,2))
lines(t1$Size,mm1$fitted.values,col="red")
plot(t1$Size, t1$KW, xlab="Size", ylab="KW")
mm2<-lm(t1$KW~poly(t1$Size,3))
lines(t1$Size,mm2$fitted.values,col="black")
plot(t1$Size, t1$KW, xlab="Size", ylab="KW")
mm1<-lm(t1$KW~poly(t1$Size,2))
lines(t1$Size,mm1$fitted.values,col="red")
plot(t1$Size, t1$KW, xlab="Size", ylab="KW")
mm2<-lm(t1$KW~poly(t1$Size,3))
lines(t1$Size,mm2$fitted.values,col="black")
t1<- read.csv("Data Set 5.csv")
par(mfrow = c(1,3), mar=c(4, 4, 2,1))
plot(t1$Size, t1$KW, xlab="x", ylab="y", main ="observed data")
mm<-lm(t1$KW~poly(t1$Size))
lines(t1$Size,mm$fitted.values,col="red")
plot(t1$Size, t1$KW, xlab="x", ylab="y", main ="observed data")
mm1<-lm(t1$KW~poly(t1$Size,2))
lines(t1$Size,mm1$fitted.values,col="red")
plot(t1$Size, t1$KW, xlab="x", ylab="y", main ="observed data")
mm2<-lm(t1$KW~poly(t1$Size,3))
lines(t1$Size,mm2$fitted.values,col="red")
# 4.5 Compare the accuracy of the three models
error_l = mm$fitted.value-t1$KW
MSE_l = mean(error_l^2)
# [1] 14320.65
error_2 = mm1$fitted.value-t1$KW
MSE_2 = mean(error_2^2)
# [1] 2618886
error_3 = mm2$fitted.value-t1$KW
MSE_3 = mean(error_3^2)
# [1] 2618234
z0 = (mean.machine1 -mean.machine2)/ (SP.Machine*(sqrt((1/10) +( 1/10))))
z0
alpha.value <- 0.01
mean.participant <- 110
avg.iq <- 100
sd.iq <- 10
n<-30 #particepants
## Z is calculated as +/- 2.58
z0 <- (mean.participant-avg.iq)/(sd.iq/sqrt(n))
z0
##Result: Reject the Null Hypothesis.
##Conclusion: Medication significantly affect the intelligence Z = 5.477, p < 0.01.
##Confidence Interval
L = 110 - (2.58 * (10 /sqrt(30)))
U = 110 + (2.58 * (10 /sqrt(30)))
L
U
